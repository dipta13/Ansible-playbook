---
- name: Bootstrap and Patch Ubuntu Server
  hosts: all
  become: yes
  gather_facts: no
  vars:
    reboot_required_file: /var/run/reboot-required
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Bootstrap python3 and python3-apt
      raw: |
        apt-get update
        apt-get install -y python3 python3-apt
      register: bootstrap_output

    - name: Wait for Python to be available
      wait_for_connection:
        timeout: 60

    - name: Gather facts after Python is ready
      setup:

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
      register: update_result

    - name: Upgrade all packages
      ansible.builtin.apt:
        upgrade: dist
      register: upgrade_result

    - name: Check if reboot is required
      ansible.builtin.stat:
        path: "{{ reboot_required_file }}"
      register: reboot_required

    - name: Reboot the server if required
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible after patching"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
      when: reboot_required.stat.exists

    - name: Show bootstrap output
      ansible.builtin.debug:
        var: bootstrap_output.stdout_lines

    - name: Show update result
      ansible.builtin.debug:
        var: update_result

    - name: Show upgrade result
      ansible.builtin.debug:
        var: upgrade_result

    - name: Show reboot status
      ansible.builtin.debug:
        msg: "Reboot was {{ 'required and performed' if reboot_required.stat.exists else 'not required' }}"
